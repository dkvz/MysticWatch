
package dkvz.UI;

import dkvz.model.*;
import java.awt.Cursor;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.*;
import java.io.*;
import javax.swing.table.*;
import org.json.simple.parser.ParseException;

/**
 *
 * @author Alain
 */
public class JFrameTransactionLogging extends javax.swing.JFrame implements CanLogMessages {

    private JFrameMain mainFrame = null;
    private List<Item> comboList = null;
    
    /**
     * Creates new form JFrameTransactionLogging
     */
    public JFrameTransactionLogging(JFrameMain mainFrame) {
        initComponents();
        this.mainFrame = mainFrame;
        // Build the list of transaction logs:
        this.buildComboFromFiles();
    }
    
    public void buildComboFromFiles() {
        // Looks for .json item transaction state files in the log directory.
        // This is going to need a whole bunch of try catching.
        this.comboList = new ArrayList<Item>();
        File logDir = new File(TPTransactionLog.PATH_TRANSACTION_LOG);
        if (!logDir.exists()) {
            // Attempt to create the directory.
            logDir.mkdir();
        }
        if (logDir.exists() && logDir.isDirectory()) {
            File [] fList = logDir.listFiles();
            if (fList != null) {
                for (File file : fList) {
                    // The file needs to be a JSON file:
                    if (file.getName().toLowerCase().endsWith(TPTransactionLog.STATE_EXTENSION)) {
                        try {
                            // Read the item name and ID from the file.
                            // If the ID isn't there, ignore that file.
                            Item item = TPTransactionLog.readItemFromStateFile(file);
                            this.comboList.add(item);
                            this.jComboBoxTransactionFile.addItem(item);
                        } catch (IOException ex) {
                            this.logMessage("ERROR - Could not read file " + file.getName() + " - Ignored");
                        } catch (ParseException ex) {
                            this.logMessage("ERROR - Could not parse JSON for file " + file.getName() + " - Ignored");
                        }                        
                    }
                }
            }
        } else {
            // We have a big problem: transaction log dir either doesn't exist
            // or isn't a directory.
            JOptionPane.showMessageDialog(null, "The transaction log directory (" + TPTransactionLog.PATH_TRANSACTION_LOG + 
                    ") is NOT a directory or the directory creation failed.\nYou'll have to manually"
                    + " create the directory.", "Error saving file", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void closeFrame() {
        this.dispose();
        this.mainFrame.setLogFrame(null);
    }
    
    @Override
    public void logMessage(String message) {
        SimpleDateFormat format = new SimpleDateFormat("HH:mm:ss");
	String dateToStr = format.format(new Date());
        this.jTextAreaLog.append(dateToStr.concat(" - ").concat(message).concat("\r\n"));
        this.jTextAreaLog.setCaretPosition(this.jTextAreaLog.getText().length());
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
     * this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTop = new javax.swing.JPanel();
        jComboBoxTransactionFile = new javax.swing.JComboBox();
        jButtonStartStopLogging = new javax.swing.JButton();
        jButtonStopAllLogging = new javax.swing.JButton();
        jButtonDeleteLog = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();
        jSplitPaneCenter = new javax.swing.JSplitPane();
        jScrollPaneTable = new javax.swing.JScrollPane();
        jTableTransactionLog = new javax.swing.JTable();
        jPanelBottom = new javax.swing.JPanel();
        jScrollPanelLog = new javax.swing.JScrollPane();
        jTextAreaLog = new javax.swing.JTextArea();
        jProgressBarLog = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Transaction Logging");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanelTop.setLayout(new javax.swing.BoxLayout(jPanelTop, javax.swing.BoxLayout.X_AXIS));

        jComboBoxTransactionFile.setModel(new DefaultComboBoxModel<Item>());
        jComboBoxTransactionFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTransactionFileActionPerformed(evt);
            }
        });
        jPanelTop.add(jComboBoxTransactionFile);

        jButtonStartStopLogging.setText("Start Logging");
        jPanelTop.add(jButtonStartStopLogging);

        jButtonStopAllLogging.setText("Stop All Logging");
        jPanelTop.add(jButtonStopAllLogging);

        jButtonDeleteLog.setText("Delete Log");
        jPanelTop.add(jButtonDeleteLog);

        jButtonClose.setText("Close");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });
        jPanelTop.add(jButtonClose);

        getContentPane().add(jPanelTop, java.awt.BorderLayout.NORTH);

        jSplitPaneCenter.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPaneCenter.setResizeWeight(1.0);

        jTableTransactionLog.setAutoCreateRowSorter(true);
        jTableTransactionLog.setModel(new DefaultTableModel());
        jScrollPaneTable.setViewportView(jTableTransactionLog);

        jSplitPaneCenter.setTopComponent(jScrollPaneTable);

        jPanelBottom.setLayout(new java.awt.BorderLayout());

        jTextAreaLog.setColumns(20);
        jTextAreaLog.setRows(5);
        jScrollPanelLog.setViewportView(jTextAreaLog);

        jPanelBottom.add(jScrollPanelLog, java.awt.BorderLayout.CENTER);
        jPanelBottom.add(jProgressBarLog, java.awt.BorderLayout.SOUTH);

        jSplitPaneCenter.setBottomComponent(jPanelBottom);

        getContentPane().add(jSplitPaneCenter, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(775, 622));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        this.closeFrame();
    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        this.closeFrame();
    }//GEN-LAST:event_formWindowClosed

    private void jComboBoxTransactionFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTransactionFileActionPerformed
        // We need to load up the model for the table.
        if (this.jComboBoxTransactionFile.getSelectedItem() != null) {
            Cursor initCursor = this.getCursor();
            try {
                this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                Item item = (Item)this.jComboBoxTransactionFile.getSelectedItem();
                // Load the events table:
                TPTransactionLog tLog = new TPTransactionLog(item.getId());
                DataLoadingRunnable tpLogLoader = new DataLoadingRunnable(tLog, this);
                Thread t = new Thread(tpLogLoader);
                this.jProgressBarLog.setMaximum(110);
                this.jProgressBarLog.setValue(0);
                t.start();
                while (!tLog.isLoaded()) {
                    this.jProgressBarLog.setValue(tLog.getProgress());
                }
                // The file is loaded.
                // Let's create the data model for the table:
                TPLogTableDataModel dataModel = new TPLogTableDataModel(tLog);
                this.jTableTransactionLog.setModel(dataModel);
                this.jProgressBarLog.setValue(110);
            } finally {
                this.setCursor(initCursor);
            }
        }
    }//GEN-LAST:event_jComboBoxTransactionFileActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonDeleteLog;
    private javax.swing.JButton jButtonStartStopLogging;
    private javax.swing.JButton jButtonStopAllLogging;
    private javax.swing.JComboBox jComboBoxTransactionFile;
    private javax.swing.JPanel jPanelBottom;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JProgressBar jProgressBarLog;
    private javax.swing.JScrollPane jScrollPaneTable;
    private javax.swing.JScrollPane jScrollPanelLog;
    private javax.swing.JSplitPane jSplitPaneCenter;
    private javax.swing.JTable jTableTransactionLog;
    private javax.swing.JTextArea jTextAreaLog;
    // End of variables declaration//GEN-END:variables
}
